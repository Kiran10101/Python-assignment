

### Iterative Method:
```python
def factorial_iterative(n):
    if n < 0:
        return "Factorial is not defined for negative numbers."
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

# Example usage
number = int(input("Enter a number: "))
print(f"The factorial of {number} is: {factorial_iterative(number)}")
```

### Recursive Method:
```python
def factorial_recursive(n):
    if n < 0:
        return "Factorial is not defined for negative numbers."
    if n == 0 or n == 1:
        return 1
    return n * factorial_recursive(n - 1)

# Example usage
number = int(input("Enter a number: "))
print(f"The factorial of {number} is: {factorial_recursive(number)}")
```

### Explanation:
1. **Iterative Method**: Uses a loop to multiply numbers from 1 to `n`.
2. **Recursive Method**: Calls the function within itself, reducing the value of `n` each time, until it reaches the base case of `n == 0` or `n == 1`.

You can use either method based on your preference.
